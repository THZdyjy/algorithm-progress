"""
输入一个数组 nums，请你返回一个等长的结果数组，结果数组中对应索引存储着下一个更大元素，如果没有更大的元素，就存 -1
输入nums=[2,1,2,4,3] 返回[4,2,4,-1,-1]，2的下一个比他大的元素是4,4呢，没有，为-1
core: 可以从后往前进行判读，这样就能在从后往前遍历的过程中，维护一个单调递减栈。（当然你也可以根据问题来维护单调递增栈）
    如果当前值是大于等于栈顶的最大元素，就将栈顶元素出栈。然后更新栈。（以维持栈单调递减的性质）
    res[i] = s[-1] if s else -1 是结合问题背景，对问题进行的处理、

用此模板可以解决的问题有：下一个更大元素1（+哈希表）  每日温度（存索引）
"""

def nextGreaterElement(nums: List[int]) -> List[int]:
    n = len(nums)
    # 存放答案的数组
    res = [0 for _ in range(n)]
    s = []
    # 倒着往栈里放
    for i in range(n - 1, -1, -1):
        # 判定个子高矮
        while s and s[-1] <= nums[i]: # 核心
            # 矮个起开，反正也被挡着了。。。
            s.pop()
        # nums[i] 身后的更大元素
        res[i] = s[-1] if s else -1
        s.append(nums[i])
    return res